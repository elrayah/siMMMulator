% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/step_3_generate_media.R
\name{step_3_generate_media}
\alias{step_3_generate_media}
\title{Step 3 : Generate Media Variables}
\usage{
step_3_generate_media(
  my_variables = my_variables,
  df_ads_step2 = df_ads_step2,
  true_cpm = c(),
  true_cpc = c(),
  mean_noisy_cpm_cpc,
  std_noisy_cpm_cpc
)
}
\arguments{
\item{my_variables}{A list that was created after running step 0. It stores the inputs you've specified.}

\item{df_ads_step2}{A data frame that was created after running step 2.}

\item{true_cpm}{A vector of numbers specifying the true Cost per Impression (CPM) of each channel (noise will be added to this to simulate number of impressions), length MUST equal to the number of TOTAL channels, if channels do not use impressions to measure activity, then put in NA for the channel, must be in same order as channels specified}

\item{true_cpc}{A vector of numbers specifying the true Cost per Click (CPC) of each channel (noise will be added to this to simulate number of clicks), length MUST equal to the number of TOTAL channels, if channels do not use clicks to measure activity, then put in NA for the channel, must be in same order as channels specified}

\item{mean_noisy_cpm_cpc}{A vector of numbers with mean of normal distribution that generates noise to CPM or CPC, vector with length equal to number of channels, must be in same order as channels specified (put channels that use impressions first, followed by channels that use clicks)}

\item{std_noisy_cpm_cpc}{A vector of numbers with standard deviation of normal distribution that generates noise to CPM or CPC, vector with length equal to number of channels, must be in same order as channels specified (put channels that use impressions first, followed by channels that use clicks)}
}
\value{
A data frame with activity for media channels
}
\description{
This step generates media activity using spend from Step 2.
}
\examples{
\dontrun{

step_3_generate_media(
df_ads_step3 <- step_3_generate_media(
my_variables = my_variables,
df_ads_step2 = df_ads_step2,
true_cpm = c(2, 20, NA),
true_cpc = c(NA, NA, 0.25),
mean_noisy_cpm_cpc = c(1, 0.05, 0.01),
std_noisy_cpm_cpc = c(0.01, 0.15, 0.01)
)
}
}
